plugins {
    id 'java'
    id "org.jetbrains.intellij" version "0.6.1"
    id "org.jetbrains.gradle.plugin.idea-ext" version "0.10"
}

tasks.withType(JavaCompile) {
    options.encoding = "utf-8"
}

group 'com.efp.plugins'

version '1.0.2'

sourceCompatibility = JavaVersion.VERSION_11

targetCompatibility = JavaVersion.VERSION_11

repositories {
   // maven{ url 'http://maven.aliyun.com/nexus/content/groups/public'}
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    //模板
    compile 'org.freemarker:freemarker:2.3.28'
    compile 'org.quartz-scheduler:quartz:2.3.2'
    compile 'com.alibaba:fastjson:1.2.74'
    //test
    testCompile 'junit:junit:4.12'
    compile 'net.sourceforge.jexcelapi:jxl:2.6.12'
    compile 'org.gitlab4j:gitlab4j-api:4.15.5'
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    //插件名称
    pluginName = 'FdbHelper'
    //基于idea的版本 跟localPath互斥
    //version = 'IU-2019.3'
    version = 'IU-2020.3'
    //idea的本地路径
    //localPath = IDEA_ROOT_PATH_2021_1\
    //localPath = IDEA_ROOT_PATH_2020_3\
    //localPath = IDEA_ROOT_PATH_2019_3\
    //localSourcesPath = LOCAL_SOURCES_PATH
    updateSinceUntilBuild = true
    //downloadSources = true
    //localSourcesPath = LOCAL_SOURCES_PATH
    //加载的插件
    plugins = ['java', 'properties', 'DatabaseTools', 'git4idea']
}

patchPluginXml {
    version = '1.0.5'
    changeNotes = """
<div>
  <p>1.0.5(xiaojunhui)</p> 
  <ul> 
    <li>提供版本MR助手</li> 
  </ul>
  <p>1.0.4(xiaojunhui)</p> 
  <ul> 
    <li>提供基于表字段备注信息反向更新到类字段文档注释的功能</li> 
  </ul>
  <p>1.0.3(xiaojunhui)</p> 
  <ul> 
    <li>提供生成简单单元测试类的功能</li> 
  </ul>
  <p>1.0.2(xiaojunhui)</p> 
  <ul> 
    <li>提供导出数据库字典为excel文档的能力</li> 
  </ul>
  <p>1.0.1(xiaojunhui)</p> 
  <ul> 
    <li>修正生成代码缺包/导包错误问题</li> 
  </ul>
  <p>1.0.0 </p>
  <ul> 
    <li>初始化插件：提供基于选择表生成增删查改功能</li> 
    <li>初始化插件：提供基于选择字段生成查询函数</li> 
    <li>初始化插件：提供基于选择字段反向添加代码到领域模型以及mapper.xml文件</li> 
    <li>初始化插件：提供基于interface添加sofa生产者/消费者配置到配置文件</li> 
  </ul>
</div>
       """
    sinceBuild = '174.*'
}
//插件打包-1
task cleanPackTempFiles(type: Delete) {
    delete file("${buildDir}/packTemp")
    doLast {
        mkdir "${buildDir}/packTemp/efp_helper_dvk/efp_helper_dvk"
    }
}
//插件打包-2
task copyPlugin(type: Copy) {
    dependsOn(cleanPackTempFiles)
    from "${buildDir}/idea-sandbox/plugins/FdbHelper/"
    into "${buildDir}/packTemp/efp_helper_dvk/efp_helper_dvk"
}

//插件打包-3
task packPlugin(type: Zip) {
    dependsOn(copyPlugin)
    archiveName = "efp_helper_dvk.zip"
    destinationDir = file("${buildDir}/packTemp/")
    from "${buildDir}/packTemp/efp_helper_dvk"
}
