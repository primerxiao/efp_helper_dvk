plugins {
    id 'java'
    id "org.jetbrains.intellij" version "0.6.1"
    id "org.jetbrains.gradle.plugin.idea-ext" version "0.10"
}

tasks.withType(JavaCompile) {
    options.encoding = "utf-8"
}

group 'com.efp.plugins'

version '1.0.6'

sourceCompatibility = JavaVersion.VERSION_11

targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    //模板
    compile 'org.freemarker:freemarker:2.3.28'
    // https://mvnrepository.com/artifact/com.101tec/zkclient
    compile 'com.101tec:zkclient:0.11'
    // https://mvnrepository.com/artifact/org.quartz-scheduler/quartz
    compile 'org.quartz-scheduler:quartz:2.3.2'
    // https://mvnrepository.com/artifact/com.alibaba/fastjson
    compile 'com.alibaba:fastjson:1.2.74'
    //test
    testCompile 'junit:junit:4.12'
    // dubbo
    compile('com.alibaba:dubbo:2.5.3') {
        exclude group: 'spring:org.springframework'
    }
    compile 'org.javassist:javassist:3.21.0-GA'

}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    //插件名称
    pluginName = 'FDB代码助手'
    //基于idea的版本 跟localPath互斥
    version = 'IU-2020.3'
    //idea的本地路径
    //localPath = IDEA_ROOT_PATH_2019_3\
    //localSourcesPath = LOCAL_SOURCES_PATH
    updateSinceUntilBuild = true
    downloadSources = true
    //localSourcesPath = LOCAL_SOURCES_PATH
    //加载的插件
    plugins = ['java', 'properties', 'DatabaseTools', 'git4idea']
}

patchPluginXml {
    version = '1.0.6'
    changeNotes = """
<div>
  <p>1.0.6(xiaojunhui)</p> 
  <ul> 
    <li>提供生成标签的导出导入功能</li> 
  </ul>
  <p>1.0.5(xiaojunhui)</p> 
  <ul> 
    <li>提供生成insertOrUpdate的功能</li> 
  </ul>
  <p>1.0.4(xiaojunhui)</p> 
  <ul> 
    <li>优化代码生成功能：支持内容覆盖，支持联合主键</li> 
  </ul>
  <p>1.0.3(caoxin)</p> 
  <ul> 
    <li>在dubbo服务类中函数直接发起dubbo调用</li> 
  </ul>
  <p>1.0.2(xiaojunhui)</p> 
  <ul> 
    <li>在数据库视图中右键相应表直接生成项目代码以及配置</li> 
  </ul>
  <p>1.0.1(xiaojunhui)</p> 
  <ul> 
    <li>1、生成dubbo配置整合为一个动作同时生成</li> 
    <li>3、支持的idea版本前置到2018</li> 
  </ul>
  <p>1.0.0 </p>
  <ul> 
    <li>初始化插件：提供生成根据类生成消费者、生产者中的xml配置</li> 
  </ul>
</div>
       """
    sinceBuild = '174.*'
}
//插件打包-1
task cleanPackTempFiles(type: Delete) {
    delete file("${buildDir}/packTemp")
    doLast {
        mkdir "${buildDir}/packTemp/efp_helper_dvk/efp_helper_dvk"
    }
}
//插件打包-2
task copyPlugin(type: Copy) {
    dependsOn(cleanPackTempFiles)
    from "${buildDir}/idea-sandbox/plugins/EfpHelper/"
    into "${buildDir}/packTemp/efp_helper_dvk/efp_helper_dvk"
}

//插件打包-3
task packPlugin(type: Zip) {
    dependsOn(copyPlugin)
    archiveName = "efp_helper_dvk.zip"
    destinationDir = file("${buildDir}/packTemp/")
    from "${buildDir}/packTemp/efp_helper_dvk"
}
